<?php require_once('Pel.php'); require_once('PelIfd.php'); class PelTag { const INTEROPERABILITY_INDEX = 0x0001; const INTEROPERABILITY_VERSION = 0x0002; const IMAGE_WIDTH = 0x0100; const IMAGE_LENGTH = 0x0101; const BITS_PER_SAMPLE = 0x0102; const COMPRESSION = 0x0103; const PHOTOMETRIC_INTERPRETATION = 0x0106; const FILL_ORDER = 0x010A; const DOCUMENT_NAME = 0x010D; const IMAGE_DESCRIPTION = 0x010E; const MAKE = 0x010F; const MODEL = 0x0110; const STRIP_OFFSETS = 0x0111; const ORIENTATION = 0x0112; const SAMPLES_PER_PIXEL = 0x0115; const ROWS_PER_STRIP = 0x0116; const STRIP_BYTE_COUNTS = 0x0117; const X_RESOLUTION = 0x011A; const Y_RESOLUTION = 0x011B; const PLANAR_CONFIGURATION = 0x011C; const RESOLUTION_UNIT = 0x0128; const TRANSFER_FUNCTION = 0x012D; const SOFTWARE = 0x0131; const DATE_TIME = 0x0132; const ARTIST = 0x013B; const WHITE_POINT = 0x013E; const PRIMARY_CHROMATICITIES = 0x013F; const TRANSFER_RANGE = 0x0156; const JPEG_PROC = 0x0200; const JPEG_INTERCHANGE_FORMAT = 0x0201; const JPEG_INTERCHANGE_FORMAT_LENGTH = 0x0202; const YCBCR_COEFFICIENTS = 0x0211; const YCBCR_SUB_SAMPLING = 0x0212; const YCBCR_POSITIONING = 0x0213; const REFERENCE_BLACK_WHITE = 0x0214; const RELATED_IMAGE_FILE_FORMAT = 0x1000; const RELATED_IMAGE_WIDTH = 0x1001; const RELATED_IMAGE_LENGTH = 0x1002; const CFA_REPEAT_PATTERN_DIM = 0x828D; const BATTERY_LEVEL = 0x828F; const COPYRIGHT = 0x8298; const EXPOSURE_TIME = 0x829A; const FNUMBER = 0x829D; const IPTC_NAA = 0x83BB; const EXIF_IFD_POINTER = 0x8769; const INTER_COLOR_PROFILE = 0x8773; const EXPOSURE_PROGRAM = 0x8822; const SPECTRAL_SENSITIVITY = 0x8824; const GPS_INFO_IFD_POINTER = 0x8825; const ISO_SPEED_RATINGS = 0x8827; const OECF = 0x8828; const EXIF_VERSION = 0x9000; const DATE_TIME_ORIGINAL = 0x9003; const DATE_TIME_DIGITIZED = 0x9004; const COMPONENTS_CONFIGURATION = 0x9101; const COMPRESSED_BITS_PER_PIXEL = 0x9102; const SHUTTER_SPEED_VALUE = 0x9201; const APERTURE_VALUE = 0x9202; const BRIGHTNESS_VALUE = 0x9203; const EXPOSURE_BIAS_VALUE = 0x9204; const MAX_APERTURE_VALUE = 0x9205; const SUBJECT_DISTANCE = 0x9206; const METERING_MODE = 0x9207; const LIGHT_SOURCE = 0x9208; const FLASH = 0x9209; const FOCAL_LENGTH = 0x920A; const SUBJECT_AREA = 0x9214; const MAKER_NOTE = 0x927C; const USER_COMMENT = 0x9286; const SUB_SEC_TIME = 0x9290; const SUB_SEC_TIME_ORIGINAL = 0x9291; const SUB_SEC_TIME_DIGITIZED = 0x9292; const XP_TITLE = 0x9C9B; const XP_COMMENT = 0x9C9C; const XP_AUTHOR = 0x9C9D; const XP_KEYWORDS = 0x9C9E; const XP_SUBJECT = 0x9C9F; const FLASH_PIX_VERSION = 0xA000; const COLOR_SPACE = 0xA001; const PIXEL_X_DIMENSION = 0xA002; const PIXEL_Y_DIMENSION = 0xA003; const RELATED_SOUND_FILE = 0xA004; const INTEROPERABILITY_IFD_POINTER = 0xA005; const FLASH_ENERGY = 0xA20B; const SPATIAL_FREQUENCY_RESPONSE = 0xA20C; const FOCAL_PLANE_X_RESOLUTION = 0xA20E; const FOCAL_PLANE_Y_RESOLUTION = 0xA20F; const FOCAL_PLANE_RESOLUTION_UNIT = 0xA210; const SUBJECT_LOCATION = 0xA214; const EXPOSURE_INDEX = 0xA215; const SENSING_METHOD = 0xA217; const FILE_SOURCE = 0xA300; const SCENE_TYPE = 0xA301; const CFA_PATTERN = 0xA302; const CUSTOM_RENDERED = 0xA401; const EXPOSURE_MODE = 0xA402; const WHITE_BALANCE = 0xA403; const DIGITAL_ZOOM_RATIO = 0xA404; const FOCAL_LENGTH_IN_35MM_FILM = 0xA405; const SCENE_CAPTURE_TYPE = 0xA406; const GAIN_CONTROL = 0xA407; const CONTRAST = 0xA408; const SATURATION = 0xA409; const SHARPNESS = 0xA40A; const DEVICE_SETTING_DESCRIPTION = 0xA40B; const SUBJECT_DISTANCE_RANGE = 0xA40C; const IMAGE_UNIQUE_ID = 0xA420; const GAMMA = 0xA500; const PRINT_IM = 0xC4A5; const GPS_VERSION_ID = 0x0000; const GPS_LATITUDE_REF = 0x0001; const GPS_LATITUDE = 0x0002; const GPS_LONGITUDE_REF = 0x0003; const GPS_LONGITUDE = 0x0004; const GPS_ALTITUDE_REF = 0x0005; const GPS_ALTITUDE = 0x0006; const GPS_TIME_STAMP = 0x0007; const GPS_SATELLITES = 0x0008; const GPS_STATUS = 0x0009; const GPS_MEASURE_MODE = 0x000A; const GPS_DOP = 0x000B; const GPS_SPEED_REF = 0x000C; const GPS_SPEED = 0x000D; const GPS_TRACK_REF = 0x000E; const GPS_TRACK = 0x000F; const GPS_IMG_DIRECTION_REF = 0x0010; const GPS_IMG_DIRECTION = 0x0011; const GPS_MAP_DATUM = 0x0012; const GPS_DEST_LATITUDE_REF = 0x0013; const GPS_DEST_LATITUDE = 0x0014; const GPS_DEST_LONGITUDE_REF = 0x0015; const GPS_DEST_LONGITUDE = 0x0016; const GPS_DEST_BEARING_REF = 0x0017; const GPS_DEST_BEARING = 0x0018; const GPS_DEST_DISTANCE_REF = 0x0019; const GPS_DEST_DISTANCE = 0x001A; const GPS_PROCESSING_METHOD = 0x001B; const GPS_AREA_INFORMATION = 0x001C; const GPS_DATE_STAMP = 0x001D; const GPS_DIFFERENTIAL = 0x001E; static function getName($type, $tag) { switch ($type) { case PelIfd::IFD0: case PelIfd::IFD1: case PelIfd::EXIF: case PelIfd::INTEROPERABILITY: switch ($tag) { case self::INTEROPERABILITY_INDEX: return 'InteroperabilityIndex'; case self::INTEROPERABILITY_VERSION: return 'InteroperabilityVersion'; case self::IMAGE_WIDTH: return 'ImageWidth'; case self::IMAGE_LENGTH: return 'ImageLength'; case self::BITS_PER_SAMPLE: return 'BitsPerSample'; case self::COMPRESSION: return 'Compression'; case self::PHOTOMETRIC_INTERPRETATION: return 'PhotometricInterpretation'; case self::FILL_ORDER: return 'FillOrder'; case self::DOCUMENT_NAME: return 'DocumentName'; case self::IMAGE_DESCRIPTION: return 'ImageDescription'; case self::MAKE: return 'Make'; case self::MODEL: return 'Model'; case self::STRIP_OFFSETS: return 'StripOffsets'; case self::ORIENTATION: return 'Orientation'; case self::SAMPLES_PER_PIXEL: return 'SamplesPerPixel'; case self::ROWS_PER_STRIP: return 'RowsPerStrip'; case self::STRIP_BYTE_COUNTS: return 'StripByteCounts'; case self::X_RESOLUTION: return 'XResolution'; case self::Y_RESOLUTION: return 'YResolution'; case self::PLANAR_CONFIGURATION: return 'PlanarConfiguration'; case self::RESOLUTION_UNIT: return 'ResolutionUnit'; case self::TRANSFER_FUNCTION: return 'TransferFunction'; case self::SOFTWARE: return 'Software'; case self::DATE_TIME: return 'DateTime'; case self::ARTIST: return 'Artist'; case self::WHITE_POINT: return 'WhitePoint'; case self::PRIMARY_CHROMATICITIES: return 'PrimaryChromaticities'; case self::TRANSFER_RANGE: return 'TransferRange'; case self::JPEG_PROC: return 'JPEGProc'; case self::JPEG_INTERCHANGE_FORMAT: return 'JPEGInterchangeFormat'; case self::JPEG_INTERCHANGE_FORMAT_LENGTH: return 'JPEGInterchangeFormatLength'; case self::YCBCR_COEFFICIENTS: return 'YCbCrCoefficients'; case self::YCBCR_SUB_SAMPLING: return 'YCbCrSubSampling'; case self::YCBCR_POSITIONING: return 'YCbCrPositioning'; case self::REFERENCE_BLACK_WHITE: return 'ReferenceBlackWhite'; case self::RELATED_IMAGE_FILE_FORMAT: return 'RelatedImageFileFormat'; case self::RELATED_IMAGE_WIDTH: return 'RelatedImageWidth'; case self::RELATED_IMAGE_LENGTH: return 'RelatedImageLength'; case self::CFA_REPEAT_PATTERN_DIM: return 'CFARepeatPatternDim'; case self::CFA_PATTERN: return 'CFAPattern'; case self::BATTERY_LEVEL: return 'BatteryLevel'; case self::COPYRIGHT: return 'Copyright'; case self::EXPOSURE_TIME: return 'ExposureTime'; case self::FNUMBER: return 'FNumber'; case self::IPTC_NAA: return 'IPTC/NAA'; case self::EXIF_IFD_POINTER: return 'ExifIFDPointer'; case self::INTER_COLOR_PROFILE: return 'InterColorProfile'; case self::EXPOSURE_PROGRAM: return 'ExposureProgram'; case self::SPECTRAL_SENSITIVITY: return 'SpectralSensitivity'; case self::GPS_INFO_IFD_POINTER: return 'GPSInfoIFDPointer'; case self::ISO_SPEED_RATINGS: return 'ISOSpeedRatings'; case self::OECF: return 'OECF'; case self::EXIF_VERSION: return 'ExifVersion'; case self::DATE_TIME_ORIGINAL: return 'DateTimeOriginal'; case self::DATE_TIME_DIGITIZED: return 'DateTimeDigitized'; case self::COMPONENTS_CONFIGURATION: return 'ComponentsConfiguration'; case self::COMPRESSED_BITS_PER_PIXEL: return 'CompressedBitsPerPixel'; case self::SHUTTER_SPEED_VALUE: return 'ShutterSpeedValue'; case self::APERTURE_VALUE: return 'ApertureValue'; case self::BRIGHTNESS_VALUE: return 'BrightnessValue'; case self::EXPOSURE_BIAS_VALUE: return 'ExposureBiasValue'; case self::MAX_APERTURE_VALUE: return 'MaxApertureValue'; case self::SUBJECT_DISTANCE: return 'SubjectDistance'; case self::METERING_MODE: return 'MeteringMode'; case self::LIGHT_SOURCE: return 'LightSource'; case self::FLASH: return 'Flash'; case self::FOCAL_LENGTH: return 'FocalLength'; case self::MAKER_NOTE: return 'MakerNote'; case self::USER_COMMENT: return 'UserComment'; case self::SUB_SEC_TIME: return 'SubSecTime'; case self::SUB_SEC_TIME_ORIGINAL: return 'SubSecTimeOriginal'; case self::SUB_SEC_TIME_DIGITIZED: return 'SubSecTimeDigitized'; case self::XP_TITLE: return 'WindowsXPTitle'; case self::XP_COMMENT: return 'WindowsXPComment'; case self::XP_AUTHOR: return 'WindowsXPAuthor'; case self::XP_KEYWORDS: return 'WindowsXPKeywords'; case self::XP_SUBJECT: return 'WindowsXPSubject'; case self::FLASH_PIX_VERSION: return 'FlashPixVersion'; case self::COLOR_SPACE: return 'ColorSpace'; case self::PIXEL_X_DIMENSION: return 'PixelXDimension'; case self::PIXEL_Y_DIMENSION: return 'PixelYDimension'; case self::RELATED_SOUND_FILE: return 'RelatedSoundFile'; case self::INTEROPERABILITY_IFD_POINTER: return 'InteroperabilityIFDPointer'; case self::FLASH_ENERGY: return 'FlashEnergy'; case self::SPATIAL_FREQUENCY_RESPONSE: return 'SpatialFrequencyResponse'; case self::FOCAL_PLANE_X_RESOLUTION: return 'FocalPlaneXResolution'; case self::FOCAL_PLANE_Y_RESOLUTION: return 'FocalPlaneYResolution'; case self::FOCAL_PLANE_RESOLUTION_UNIT: return 'FocalPlaneResolutionUnit'; case self::SUBJECT_LOCATION: return 'SubjectLocation'; case self::EXPOSURE_INDEX: return 'ExposureIndex'; case self::SENSING_METHOD: return 'SensingMethod'; case self::FILE_SOURCE: return 'FileSource'; case self::SCENE_TYPE: return 'SceneType'; case self::SUBJECT_AREA: return 'SubjectArea'; case self::CUSTOM_RENDERED: return 'CustomRendered'; case self::EXPOSURE_MODE: return 'ExposureMode'; case self::WHITE_BALANCE: return 'WhiteBalance'; case self::DIGITAL_ZOOM_RATIO: return 'DigitalZoomRatio'; case self::FOCAL_LENGTH_IN_35MM_FILM: return 'FocalLengthIn35mmFilm'; case self::SCENE_CAPTURE_TYPE: return 'SceneCaptureType'; case self::GAIN_CONTROL: return 'GainControl'; case self::CONTRAST: return 'Contrast'; case self::SATURATION: return 'Saturation'; case self::SHARPNESS: return 'Sharpness'; case self::DEVICE_SETTING_DESCRIPTION: return 'DeviceSettingDescription'; case self::SUBJECT_DISTANCE_RANGE: return 'SubjectDistanceRange'; case self::IMAGE_UNIQUE_ID: return 'ImageUniqueID'; case self::GAMMA: return 'Gamma'; case self::PRINT_IM: return 'PrintIM'; } case PelIfd::GPS: switch ($tag) { case self::GPS_VERSION_ID: return 'GPSVersionID'; case self::GPS_LATITUDE_REF: return 'GPSLatitudeRef'; case self::GPS_LATITUDE: return 'GPSLatitude'; case self::GPS_LONGITUDE_REF: return 'GPSLongitudeRef'; case self::GPS_LONGITUDE: return 'GPSLongitude'; case self::GPS_ALTITUDE_REF: return 'GPSAltitudeRef'; case self::GPS_ALTITUDE: return 'GPSAltitude'; case self::GPS_TIME_STAMP: return 'GPSTimeStamp'; case self::GPS_SATELLITES: return 'GPSSatellites'; case self::GPS_STATUS: return 'GPSStatus'; case self::GPS_MEASURE_MODE: return 'GPSMeasureMode'; case self::GPS_DOP: return 'GPSDOP'; case self::GPS_SPEED_REF: return 'GPSSpeedRef'; case self::GPS_SPEED: return 'GPSSpeed'; case self::GPS_TRACK_REF: return 'GPSTrackRef'; case self::GPS_TRACK: return 'GPSTrack'; case self::GPS_IMG_DIRECTION_REF: return 'GPSImgDirectionRef'; case self::GPS_IMG_DIRECTION: return 'GPSImgDirection'; case self::GPS_MAP_DATUM: return 'GPSMapDatum'; case self::GPS_DEST_LATITUDE_REF: return 'GPSDestLatitudeRef'; case self::GPS_DEST_LATITUDE: return 'GPSDestLatitude'; case self::GPS_DEST_LONGITUDE_REF: return 'GPSDestLongitudeRef'; case self::GPS_DEST_LONGITUDE: return 'GPSDestLongitude'; case self::GPS_DEST_BEARING_REF: return 'GPSDestBearingRef'; case self::GPS_DEST_BEARING: return 'GPSDestBearing'; case self::GPS_DEST_DISTANCE_REF: return 'GPSDestDistanceRef'; case self::GPS_DEST_DISTANCE: return 'GPSDestDistance'; case self::GPS_PROCESSING_METHOD: return 'GPSProcessingMethod'; case self::GPS_AREA_INFORMATION: return 'GPSAreaInformation'; case self::GPS_DATE_STAMP: return 'GPSDateStamp'; case self::GPS_DIFFERENTIAL: return 'GPSDifferential'; } default: return Pel::fmt('Unknown: 0x%04X', $tag); } } function getTitle($type, $tag) { switch ($type) { case PelIfd::IFD0: case PelIfd::IFD1: case PelIfd::EXIF: case PelIfd::INTEROPERABILITY: switch ($tag) { case self::INTEROPERABILITY_INDEX: return Pel::tra('Interoperability Index'); case self::INTEROPERABILITY_VERSION: return Pel::tra('Interoperability Version'); case self::IMAGE_WIDTH: return Pel::tra('Image Width'); case self::IMAGE_LENGTH: return Pel::tra('Image Length'); case self::BITS_PER_SAMPLE: return Pel::tra('Bits per Sample'); case self::COMPRESSION: return Pel::tra('Compression'); case self::PHOTOMETRIC_INTERPRETATION: return Pel::tra('Photometric Interpretation'); case self::FILL_ORDER: return Pel::tra('Fill Order'); case self::DOCUMENT_NAME: return Pel::tra('Document Name'); case self::IMAGE_DESCRIPTION: return Pel::tra('Image Description'); case self::MAKE: return Pel::tra('Manufacturer'); case self::MODEL: return Pel::tra('Model'); case self::STRIP_OFFSETS: return Pel::tra('Strip Offsets'); case self::ORIENTATION: return Pel::tra('Orientation'); case self::SAMPLES_PER_PIXEL: return Pel::tra('Samples per Pixel'); case self::ROWS_PER_STRIP: return Pel::tra('Rows per Strip'); case self::STRIP_BYTE_COUNTS: return Pel::tra('Strip Byte Count'); case self::X_RESOLUTION: return Pel::tra('x-Resolution'); case self::Y_RESOLUTION: return Pel::tra('y-Resolution'); case self::PLANAR_CONFIGURATION: return Pel::tra('Planar Configuration'); case self::RESOLUTION_UNIT: return Pel::tra('Resolution Unit'); case self::TRANSFER_FUNCTION: return Pel::tra('Transfer Function'); case self::SOFTWARE: return Pel::tra('Software'); case self::DATE_TIME: return Pel::tra('Date and Time'); case self::ARTIST: return Pel::tra('Artist'); case self::WHITE_POINT: return Pel::tra('White Point'); case self::PRIMARY_CHROMATICITIES: return Pel::tra('Primary Chromaticities'); case self::TRANSFER_RANGE: return Pel::tra('Transfer Range'); case self::JPEG_PROC: return Pel::tra('JPEG Process'); case self::JPEG_INTERCHANGE_FORMAT: return Pel::tra('JPEG Interchange Format'); case self::JPEG_INTERCHANGE_FORMAT_LENGTH: return Pel::tra('JPEG Interchange Format Length'); case self::YCBCR_COEFFICIENTS: return Pel::tra('YCbCr Coefficients'); case self::YCBCR_SUB_SAMPLING: return Pel::tra('YCbCr Sub-Sampling'); case self::YCBCR_POSITIONING: return Pel::tra('YCbCr Positioning'); case self::REFERENCE_BLACK_WHITE: return Pel::tra('Reference Black/White'); case self::RELATED_IMAGE_FILE_FORMAT: return Pel::tra('Related Image File Format'); case self::RELATED_IMAGE_WIDTH: return Pel::tra('Related Image Width'); case self::RELATED_IMAGE_LENGTH: return Pel::tra('Related Image Length'); case self::CFA_REPEAT_PATTERN_DIM: return Pel::tra('CFA Repeat Pattern Dim'); case self::CFA_PATTERN: return Pel::tra('CFA Pattern'); case self::BATTERY_LEVEL: return Pel::tra('Battery Level'); case self::COPYRIGHT: return Pel::tra('Copyright'); case self::EXPOSURE_TIME: return Pel::tra('Exposure Time'); case self::FNUMBER: return Pel::tra('FNumber'); case self::IPTC_NAA: return Pel::tra('IPTC/NAA'); case self::EXIF_IFD_POINTER: return Pel::tra('Exif IFD Pointer'); case self::INTER_COLOR_PROFILE: return Pel::tra('Inter Color Profile'); case self::EXPOSURE_PROGRAM: return Pel::tra('Exposure Program'); case self::SPECTRAL_SENSITIVITY: return Pel::tra('Spectral Sensitivity'); case self::GPS_INFO_IFD_POINTER: return Pel::tra('GPS Info IFD Pointer'); case self::ISO_SPEED_RATINGS: return Pel::tra('ISO Speed Ratings'); case self::OECF: return Pel::tra('OECF'); case self::EXIF_VERSION: return Pel::tra('Exif Version'); case self::DATE_TIME_ORIGINAL: return Pel::tra('Date and Time (original)'); case self::DATE_TIME_DIGITIZED: return Pel::tra('Date and Time (digitized)'); case self::COMPONENTS_CONFIGURATION: return Pel::tra('Components Configuration'); case self::COMPRESSED_BITS_PER_PIXEL: return Pel::tra('Compressed Bits per Pixel'); case self::SHUTTER_SPEED_VALUE: return Pel::tra('Shutter speed'); case self::APERTURE_VALUE: return Pel::tra('Aperture'); case self::BRIGHTNESS_VALUE: return Pel::tra('Brightness'); case self::EXPOSURE_BIAS_VALUE: return Pel::tra('Exposure Bias'); case self::MAX_APERTURE_VALUE: return Pel::tra('Max Aperture Value'); case self::SUBJECT_DISTANCE: return Pel::tra('Subject Distance'); case self::METERING_MODE: return Pel::tra('Metering Mode'); case self::LIGHT_SOURCE: return Pel::tra('Light Source'); case self::FLASH: return Pel::tra('Flash'); case self::FOCAL_LENGTH: return Pel::tra('Focal Length'); case self::MAKER_NOTE: return Pel::tra('Maker Note'); case self::USER_COMMENT: return Pel::tra('User Comment'); case self::SUB_SEC_TIME: return Pel::tra('SubSec Time'); case self::SUB_SEC_TIME_ORIGINAL: return Pel::tra('SubSec Time Original'); case self::SUB_SEC_TIME_DIGITIZED: return Pel::tra('SubSec Time Digitized'); case self::XP_TITLE: return 'Windows XP Title'; case self::XP_COMMENT: return 'Windows XP Comment'; case self::XP_AUTHOR: return 'Windows XP Author'; case self::XP_KEYWORDS: return 'Windows XP Keywords'; case self::XP_SUBJECT: return 'Windows XP Subject'; case self::FLASH_PIX_VERSION: return Pel::tra('FlashPix Version'); case self::COLOR_SPACE: return Pel::tra('Color Space'); case self::PIXEL_X_DIMENSION: return Pel::tra('Pixel x-Dimension'); case self::PIXEL_Y_DIMENSION: return Pel::tra('Pixel y-Dimension'); case self::RELATED_SOUND_FILE: return Pel::tra('Related Sound File'); case self::INTEROPERABILITY_IFD_POINTER: return Pel::tra('Interoperability IFD Pointer'); case self::FLASH_ENERGY: return Pel::tra('Flash Energy'); case self::SPATIAL_FREQUENCY_RESPONSE: return Pel::tra('Spatial Frequency Response'); case self::FOCAL_PLANE_X_RESOLUTION: return Pel::tra('Focal Plane x-Resolution'); case self::FOCAL_PLANE_Y_RESOLUTION: return Pel::tra('Focal Plane y-Resolution'); case self::FOCAL_PLANE_RESOLUTION_UNIT: return Pel::tra('Focal Plane Resolution Unit'); case self::SUBJECT_LOCATION: return Pel::tra('Subject Location'); case self::EXPOSURE_INDEX: return Pel::tra('Exposure index'); case self::SENSING_METHOD: return Pel::tra('Sensing Method'); case self::FILE_SOURCE: return Pel::tra('File Source'); case self::SCENE_TYPE: return Pel::tra('Scene Type'); case self::SUBJECT_AREA: return Pel::tra('Subject Area'); case self::CUSTOM_RENDERED: return Pel::tra('Custom Rendered'); case self::EXPOSURE_MODE: return Pel::tra('Exposure Mode'); case self::WHITE_BALANCE: return Pel::tra('White Balance'); case self::DIGITAL_ZOOM_RATIO: return Pel::tra('Digital Zoom Ratio'); case self::FOCAL_LENGTH_IN_35MM_FILM: return Pel::tra('Focal Length In 35mm Film'); case self::SCENE_CAPTURE_TYPE: return Pel::tra('Scene Capture Type'); case self::GAIN_CONTROL: return Pel::tra('Gain Control'); case self::CONTRAST: return Pel::tra('Contrast'); case self::SATURATION: return Pel::tra('Saturation'); case self::SHARPNESS: return Pel::tra('Sharpness'); case self::DEVICE_SETTING_DESCRIPTION: return Pel::tra('Device Setting Description'); case self::SUBJECT_DISTANCE_RANGE: return Pel::tra('Subject Distance Range'); case self::IMAGE_UNIQUE_ID: return Pel::tra('Image Unique ID'); case self::GAMMA: return Pel::tra('Gamma'); case self::PRINT_IM: return Pel::tra('Print IM'); } case PelIfd::GPS: switch ($tag) { case self::GPS_VERSION_ID: return 'GPSVersionID'; case self::GPS_LATITUDE_REF: return 'GPSLatitudeRef'; case self::GPS_LATITUDE: return 'GPSLatitude'; case self::GPS_LONGITUDE_REF: return 'GPSLongitudeRef'; case self::GPS_LONGITUDE: return 'GPSLongitude'; case self::GPS_ALTITUDE_REF: return 'GPSAltitudeRef'; case self::GPS_ALTITUDE: return 'GPSAltitude'; case self::GPS_TIME_STAMP: return 'GPSTimeStamp'; case self::GPS_SATELLITES: return 'GPSSatellites'; case self::GPS_STATUS: return 'GPSStatus'; case self::GPS_MEASURE_MODE: return 'GPSMeasureMode'; case self::GPS_DOP: return 'GPSDOP'; case self::GPS_SPEED_REF: return 'GPSSpeedRef'; case self::GPS_SPEED: return 'GPSSpeed'; case self::GPS_TRACK_REF: return 'GPSTrackRef'; case self::GPS_TRACK: return 'GPSTrack'; case self::GPS_IMG_DIRECTION_REF: return 'GPSImgDirectionRef'; case self::GPS_IMG_DIRECTION: return 'GPSImgDirection'; case self::GPS_MAP_DATUM: return 'GPSMapDatum'; case self::GPS_DEST_LATITUDE_REF: return 'GPSDestLatitudeRef'; case self::GPS_DEST_LATITUDE: return 'GPSDestLatitude'; case self::GPS_DEST_LONGITUDE_REF: return 'GPSDestLongitudeRef'; case self::GPS_DEST_LONGITUDE: return 'GPSDestLongitude'; case self::GPS_DEST_BEARING_REF: return 'GPSDestBearingRef'; case self::GPS_DEST_BEARING: return 'GPSDestBearing'; case self::GPS_DEST_DISTANCE_REF: return 'GPSDestDistanceRef'; case self::GPS_DEST_DISTANCE: return 'GPSDestDistance'; case self::GPS_PROCESSING_METHOD: return 'GPSProcessingMethod'; case self::GPS_AREA_INFORMATION: return 'GPSAreaInformation'; case self::GPS_DATE_STAMP: return 'GPSDateStamp'; case self::GPS_DIFFERENTIAL: return 'GPSDifferential'; } default: return Pel::fmt('Unknown Tag: 0x%04X', $tag); } } } ?>