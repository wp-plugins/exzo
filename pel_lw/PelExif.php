<?php require_once('PelJpegContent.php'); require_once('PelException.php'); require_once('PelFormat.php'); require_once('PelEntry.php'); require_once('PelTiff.php'); require_once('PelIfd.php'); require_once('PelTag.php'); require_once('Pel.php'); class PelExif extends PelJpegContent { const EXIF_HEADER = "Exif\0\0"; private $tiff = null; function __construct() { } function load(PelDataWindow $d) { Pel::debug('Parsing %d bytes of Exif data...', $d->getSize()); if ($d->getSize() < 6) throw new PelInvalidDataException('Expected at least 6 bytes of Exif ' . 'data, found just %d bytes.', $d->getSize()); if ($d->strcmp(0, self::EXIF_HEADER)) { $d->setWindowStart(strlen(self::EXIF_HEADER)); } else { throw new PelInvalidDataException('Exif header not found.'); } $this->tiff = new PelTiff(); $this->tiff->load($d); } function setTiff(PelTiff $tiff) { $this->tiff = $tiff; } function getTiff() { return $this->tiff; } function getBytes() { return self::EXIF_HEADER . $this->tiff->getBytes(); } function __toString() { return Pel::tra("Dumping Exif data...\n") . $this->tiff->__toString(); } } ?>